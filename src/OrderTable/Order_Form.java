/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OrderTable;

import static com.sun.org.apache.bcel.internal.util.SecuritySupport.getResourceAsStream;
import java.awt.event.*;
import java.io.IOException;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.*;
import Customer.*;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

    
/**
 *
 * @author Vageesha
 */

public class Order_Form extends javax.swing.JFrame {

    /**
     * Creates new form Order_Form
     */
    private boolean modify = false;
    public void Order_Form_Init() {
        initComponents();
    }

    public void OrderModify(int id,String des,Date d,Date d2,String cusName,String cusAdd,int proID,int qty,String status,double dis,double total,double unit){
        jLabel18.setText(Integer.toString(id));
        Description_Input.setText(des);
        Order_Date_Input.setDate(d);
        Order_Due_Date_Input.setDate(d2);
        Customer_Name_Input.getEditor().setItem(cusName);
        jLabel5.setText(cusAdd);
        Product_ID_Input.getEditor().setItem(proID);
        Quantity_Input.setText(Integer.toString(qty));
        Order_Status_Input.getEditor().setItem(status);
        Discount_Input.setText(Double.toString(dis));
        jLabel1.setText(Double.toString(total));
        jLabel9.setText(Double.toString(unit));  
        modify = true;
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Order_ID = new javax.swing.JLabel();
        Customer_ID = new javax.swing.JLabel();
        Product_ID = new javax.swing.JLabel();
        Quantity = new javax.swing.JLabel();
        Order_Status = new javax.swing.JLabel();
        Discount = new javax.swing.JLabel();
        Total_Price = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        Quantity_Input = new javax.swing.JTextField();
        Quantity_Input.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if ( ((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
                    e.consume();
                }
            }
        });

        DocumentListener documentListener = new DocumentListener() {
            public void changedUpdate(DocumentEvent documentEvent) {

            }
            public void insertUpdate(DocumentEvent documentEvent) {

                String qty = Quantity_Input.getText();
                String dis = Discount_Input.getText();
                String UnP = jLabel9.getText();
                Double UnPrice = Double.parseDouble(UnP);
                Double total = null;

                if((qty.equals("")) && (dis.equals("")))
                total = (Double) UnPrice;
                else if(dis.equals("")){
                    Integer qtyInt = Integer.parseInt(qty);
                    total = (Double) UnPrice * qtyInt;
                }
                else if(qty.equals("")){
                    Double disDou = Double.parseDouble(dis);
                    total = (Double) UnPrice * ((100 - disDou)/100);
                }

                else{
                    Integer qtyInt = Integer.parseInt(qty);
                    Double disDou = Double.parseDouble(dis);
                    total = (Double) UnPrice * qtyInt * ((100 - disDou)/100);
                }

                jLabel1.setText(Double.toString(total));

            }
            public void removeUpdate(DocumentEvent documentEvent) {

                String qty = Quantity_Input.getText();
                String dis = Discount_Input.getText();
                String UnP = jLabel9.getText();
                Double UnPrice = Double.parseDouble(UnP);
                Double total = null;

                if((qty.equals("")) && (dis.equals("")))
                total = (Double) UnPrice;
                else if(dis.equals("")){
                    Integer qtyInt = Integer.parseInt(qty);
                    total = (Double) UnPrice * qtyInt;
                }
                else if(qty.equals("")){
                    Double disDou = Double.parseDouble(dis);
                    total = (Double) UnPrice * ((100 - disDou)/100);
                }

                else{
                    Integer qtyInt = Integer.parseInt(qty);
                    Double disDou = Double.parseDouble(dis);
                    total = (Double) UnPrice * qtyInt * ((100 - disDou)/100);
                }

                jLabel1.setText(Double.toString(total));

            }
        };

        Quantity_Input.getDocument().addDocumentListener(documentListener);
        jLabel1 = new javax.swing.JLabel();
        Discount_Input = new javax.swing.JTextField();
        Discount_Input.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if ( ((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE) && (c != KeyEvent.VK_PERIOD)) {
                    e.consume();
                }
            }
        });

        Discount_Input.getDocument().addDocumentListener(documentListener);
        Order_Status_Input = new javax.swing.JComboBox<>();
        AutoCompleteDecorator.decorate(Order_Status_Input);
        Order_Status_Input.addItem("No Status");
        Order_Status_Input.addItem("Processing");
        Order_Status_Input.addItem("Packing");
        Order_Status_Input.addItem("Transport");
        Order_Status_Input.addItem("Completed");
        Order_Status_Input.setSelectedIndex(0);
        jLabel3 = new javax.swing.JLabel();
        Add = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        Customer_Name_Input = new javax.swing.JComboBox<>();

        AutoCompleteDecorator.decorate(Customer_Name_Input);
        Customer_Name_Input.addItem("");
        try {
            Connection conn = DatabaseConnection.connect();
            PreparedStatement DBOUTPUT = conn.prepareStatement("SELECT name FROM Details");
            ResultSet RS = DBOUTPUT.executeQuery();	
            while(RS.next()){ 
                Customer_Name_Input.addItem(RS.getString("Name"));
            } 
            conn.close();
        }catch(Exception e) {
            System.out.println(e);
        }

        Customer_Name_Input.setSelectedIndex(0);
        Customer_Name_Input.addItemListener(new ItemListener() {

            public void itemStateChanged(ItemEvent event) {

                if (event.getStateChange() == ItemEvent.SELECTED) {
                    String txt = Customer_Name_Input.getSelectedItem().toString();
                    try {
                        Connection conn = DatabaseConnection.connect();
                        PreparedStatement DBOUTPUT2 = conn.prepareStatement("SELECT Adress FROM Details WHERE Name = ?");
                        DBOUTPUT2.setString(1, txt);
                        ResultSet RS2 = DBOUTPUT2.executeQuery();

                        if(RS2.next()) 
                        jLabel5.setText(RS2.getString("Adress"));

                        conn.close();
                    }catch(Exception e) {
                        System.out.println(e);
                    }
                }
            }
        });
        jLabel5 = new javax.swing.JLabel();
        Add_Customer = new javax.swing.JButton();
        Order_Date_Input = new org.jdesktop.swingx.JXDatePicker();
        Order_Due_Date_Input = new org.jdesktop.swingx.JXDatePicker();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Product_ID_Input = new javax.swing.JComboBox<>();
        AutoCompleteDecorator.decorate(Product_ID_Input);
        Product_ID_Input.addItem("");

        try {
            Connection conn = DatabaseConnection.connect();
            PreparedStatement DBOUTPUT3 = conn.prepareStatement("SELECT IndexNo FROM Inventory");
            ResultSet RS3 = DBOUTPUT3.executeQuery();
            while(RS3.next()){ 
                Product_ID_Input.addItem(RS3.getString("IndexNo"));
            }

            conn.close();
        }catch(Exception e) {
            System.out.println(e);
        }
        Product_ID_Input.setSelectedIndex(0);

        Product_ID_Input.addItemListener(new ItemListener() {

            public void itemStateChanged(ItemEvent event) {

                if (event.getStateChange() == ItemEvent.SELECTED) {
                    String txt = Product_ID_Input.getSelectedItem().toString();
                    int product = Integer.parseInt(txt);    
                    try {
                        Connection conn = DatabaseConnection.connect();
                        PreparedStatement DBOUTPUT4 = conn.prepareStatement("SELECT UnitPrice FROM Inventory WHERE IndexNo = ?");
                        DBOUTPUT4.setInt(1, product);
                        ResultSet RS4 = DBOUTPUT4.executeQuery();
                        String price = null;

                        if(RS4.next())
                        price = RS4.getString("UnitPrice");

                        jLabel9.setText(price);

                        String qty = Quantity_Input.getText();
                        String dis = Discount_Input.getText();
                        Double UnPrice = Double.parseDouble(price);
                        Double total = null; 

                        if((qty.equals("")) && (dis.equals("")))
                        total = (Double) UnPrice;
                        else if(dis.equals("")){
                            Integer qtyInt = Integer.parseInt(qty);
                            total = (Double) UnPrice * qtyInt;
                        }
                        else if(qty.equals("")){
                            Double disDou = Double.parseDouble(dis);
                            total = (Double) UnPrice * ((100 - disDou)/100);
                        }

                        else{
                            Integer qtyInt = Integer.parseInt(qty);
                            Double disDou = Double.parseDouble(dis);
                            total = (Double) UnPrice * qtyInt * ((100 - disDou)/100);
                        }

                        jLabel1.setText(Double.toString(total));

                        conn.close();
                    }catch(Exception e) {
                        System.out.println(e);
                    }
                }
            }
        });
        jLabel9 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        try{
            Connection conn = DatabaseConnection.connect();
            PreparedStatement DBOUTPUT5 = conn.prepareStatement("SELECT MAX(orderID) FROM orders");
            ResultSet RS5 = DBOUTPUT5.executeQuery();
            Integer num = null;

            if(RS5.next()){
                num =RS5.getInt(1);
            }
            if(num == 0){
                jLabel18.setText("1");
            }
            else{
                int number = num + 1;
                String n = Integer.toString(number);
                jLabel18.setText(n);
            }

            conn.close();
        }catch(Exception e) {
            System.out.println(e);
        }
        Description = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Description_Input = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1220, 1010));

        Order_ID.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Order_ID.setText("Order ID");

        Customer_ID.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Customer_ID.setText("Customer Name");

        Product_ID.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Product_ID.setText("Product ID");

        Quantity.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Quantity.setText("Quantity");

        Order_Status.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Order_Status.setText("Order Status");

        Discount.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Discount.setText("Discount");

        Total_Price.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Total_Price.setText("Total Price");

        jLabel2.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel2.setText(":-");

        jLabel7.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel7.setText(":-");

        jLabel10.setFont(new java.awt.Font("MV Boli", 0, 16)); // NOI18N
        jLabel10.setText(":-");

        jLabel11.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel11.setText(":-");

        jLabel13.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel13.setText(":-");

        jLabel14.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel14.setText(":-");

        jLabel15.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel15.setText(":-");

        Quantity_Input.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Quantity_Input.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel1.setText("0.0");

        Discount_Input.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N

        Order_Status_Input.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Matura MT Script Capitals", 3, 48)); // NOI18N
        jLabel3.setText("Order Form");

        Add.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Add.setText("Add");
        Add.setPreferredSize(new java.awt.Dimension(142, 67));
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Reset.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Reset.setText("Reset");
        Reset.setPreferredSize(new java.awt.Dimension(142, 67));
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        Back.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Back.setText("Back");
        Back.setPreferredSize(new java.awt.Dimension(142, 67));
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Customer_Name_Input.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel5.setText("No Customer selected");

        Add_Customer.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Add_Customer.setText("Add Customer");
        Add_Customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_CustomerActionPerformed(evt);
            }
        });

        Order_Date_Input.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Order_Date_Input.setPreferredSize(new java.awt.Dimension(196, 38));

        Order_Due_Date_Input.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Order_Due_Date_Input.setPreferredSize(new java.awt.Dimension(196, 38));

        jLabel6.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel6.setText("Order Date");

        jLabel8.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel8.setText("Due Date ");

        Product_ID_Input.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel9.setText("0.0");

        jLabel16.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel16.setText("Unit Price");

        jLabel17.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel17.setText(":-");

        jLabel18.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N

        Description.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Description.setText("Description");

        jLabel20.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel20.setText(":-");

        jScrollPane1.setPreferredSize(new java.awt.Dimension(306, 126));

        Description_Input.setColumns(20);
        Description_Input.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        Description_Input.setRows(5);
        Description_Input.setPreferredSize(new java.awt.Dimension(303, 100));
        jScrollPane1.setViewportView(Description_Input);

        jLabel19.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel19.setText(":-");

        jLabel21.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        jLabel21.setText(":-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(453, 453, 453)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(438, 438, 438))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(Add_Customer))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Product_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(jLabel10)
                                .addGap(79, 79, 79)
                                .addComponent(Product_ID_Input, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Customer_ID)
                                .addGap(9, 9, 9)
                                .addComponent(jLabel7)
                                .addGap(77, 77, 77)
                                .addComponent(Customer_Name_Input, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)
                                        .addComponent(jLabel11))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Discount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Order_Status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Total_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel15)))
                                .addGap(77, 77, 77)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Order_Status_Input, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Quantity_Input)
                                    .addComponent(Discount_Input)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel17)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(47, 47, 47)
                                .addComponent(jLabel19)
                                .addGap(77, 77, 77)
                                .addComponent(Order_Date_Input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(23, 23, 23)
                                .addComponent(jLabel8)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel21)
                                .addGap(18, 18, 18)
                                .addComponent(Order_Due_Date_Input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Description, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel20)
                                .addGap(77, 77, 77)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Order_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(jLabel2)
                                .addGap(77, 77, 77)
                                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(249, 249, 249))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Order_ID)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Description)
                    .addComponent(jLabel20)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(Order_Date_Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Order_Due_Date_Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Customer_Name_Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Customer_ID)
                            .addComponent(jLabel7))))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Add_Customer))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(Product_ID))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel10))
                    .addComponent(Product_ID_Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Quantity_Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Quantity)
                            .addComponent(jLabel11))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Order_Status_Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(Order_Status))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Discount_Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Discount)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Total_Price)
                    .addComponent(jLabel15)
                    .addComponent(jLabel1)
                    .addComponent(jLabel16)
                    .addComponent(jLabel9)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     
    
    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        Integer orderID = Integer.parseInt(jLabel18.getText());
        String orderDes = Description_Input.getText();        
        java.util.Date orderDate = Order_Date_Input.getDate();        
        java.util.Date orderDueDate = Order_Due_Date_Input.getDate();
        String customerName = Customer_Name_Input.getSelectedItem().toString();      
        String Address = jLabel5.getText();
        String productID = Product_ID_Input.getSelectedItem().toString();
        String qty = Quantity_Input.getText();
        String orderStatus = Order_Status_Input.getSelectedItem().toString();
        String discount = Discount_Input.getText();
        String totalPrice = jLabel1.getText();
        String unitPrice = jLabel9.getText();
        
        if(orderDes.equals("") || (orderDate == null) || (orderDueDate == null) || (customerName.equals("")) || (productID.equals("")) || (qty.equals("")) || (orderStatus.equals("No Status")) || (discount.equals(""))){
         
            ArrayList<String> arr = new ArrayList<>();
            if(orderDes.equals(""))
                arr.add("Order Description");
            
            if(orderDate == null)
                arr.add("Order Date");
            
            if(orderDueDate == null)
                arr.add("Order Due Date");
            
            if(customerName.equals(""))
                arr.add("Customer Name");
            
            if(productID.equals(""))
                arr.add("Product ID");
            
            if(qty.equals(""))
                arr.add("Quantity");
            
            if(orderStatus.equals("No Status"))
                arr.add("Order Status");
            
            if(discount.equals(""))
                arr.add("Discount");
            
            
               PopupError pop = new PopupError();
               BackgroundPanel background = CallBackground.call();
               pop.setContentPane(background);
               pop.PopupError_Init();
               pop.popupStrings(arr);
               pop.setSize(515,301);
               pop.setLocationRelativeTo(null);
               pop.setResizable(false);
               pop.setVisible(true);
               pop.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
               
        }else{
         
            if(modify == false){
         try {
            Connection conn = DatabaseConnection.connect();
            
            PreparedStatement DBOUTPUT6 = conn.prepareStatement("INSERT INTO orders VALUES(?,?,?,?,?,?,?,?,?,?,?,?)");
            DBOUTPUT6.setInt(1, orderID);
            DBOUTPUT6.setString(2, orderDes);
            
            java.sql.Date d1= new java.sql.Date(orderDate.getTime());
            DBOUTPUT6.setDate(3,d1);
            
            java.sql.Date d2= new java.sql.Date(orderDueDate.getTime());
            DBOUTPUT6.setDate(4,d2);
            
            DBOUTPUT6.setString(5, customerName);
            DBOUTPUT6.setString(6, Address);
            
            Integer productID2 = Integer.parseInt(productID);
            DBOUTPUT6.setInt(7, productID2);
            
            Integer qty2 = Integer.parseInt(qty);
            DBOUTPUT6.setInt(8, qty2);
                        
            DBOUTPUT6.setString(9, orderStatus);
            
            Double discount2 = Double.parseDouble(discount);
            DBOUTPUT6.setDouble(10, discount2);
            
            Double totalPrice2 = Double.parseDouble(totalPrice);
            DBOUTPUT6.setDouble(11, totalPrice2);
            
            Double unitPrice2 = Double.parseDouble(unitPrice);
            DBOUTPUT6.setDouble(12, unitPrice2);
            
            DBOUTPUT6.executeUpdate();
            
          DBOUTPUT6.close();
          conn.close();
        }catch(Exception e) {
            System.out.println(e);
        }
               PopupSuccessful pop = new PopupSuccessful();
               BackgroundPanel background = CallBackground.call();
               pop.setContentPane(background);
               pop.PopupOK_Init();
               pop.IncludeTxt("Order Added Successfully");
               pop.setSize(515,301);
               pop.setLocationRelativeTo(null);
               pop.setResizable(false);
               pop.setVisible(true);
               this.dispose();
            
            }else{
                
                try {
            Connection conn = DatabaseConnection.connect();
            
            PreparedStatement DBOUTPUT6 = conn.prepareStatement("UPDATE orders SET description = ?, orderDate = ?, orderDueDate = ?, customerName = ?, customerAddress = ?, productID = ?, quantity = ?, orderStatus = ?, discount = ?, totalPrice = ?, unitPrice = ? WHERE orderID = ?");
            DBOUTPUT6.setInt(12, orderID);
            DBOUTPUT6.setString(1, orderDes);
            
            java.sql.Date d1= new java.sql.Date(orderDate.getTime());
            DBOUTPUT6.setDate(2,d1);
            
            java.sql.Date d2= new java.sql.Date(orderDueDate.getTime());
            DBOUTPUT6.setDate(3,d2);
            
            DBOUTPUT6.setString(4, customerName);
            DBOUTPUT6.setString(5, Address);
            
            Integer productID2 = Integer.parseInt(productID);
            DBOUTPUT6.setInt(6, productID2);
            
            Integer qty2 = Integer.parseInt(qty);
            DBOUTPUT6.setInt(7, qty2);
                        
            DBOUTPUT6.setString(8, orderStatus);
            
            Double discount2 = Double.parseDouble(discount);
            DBOUTPUT6.setDouble(9, discount2);
            
            Double totalPrice2 = Double.parseDouble(totalPrice);
            DBOUTPUT6.setDouble(10, totalPrice2);
            
            Double unitPrice2 = Double.parseDouble(unitPrice);
            DBOUTPUT6.setDouble(11, unitPrice2);
            
            DBOUTPUT6.executeUpdate();
            
            DBOUTPUT6.close();
            conn.close();
        }catch(Exception e) {
            System.out.println(e);
        }
               PopupSuccessful pop = new PopupSuccessful();
               BackgroundPanel background = CallBackground.call();
               pop.setContentPane(background);
               pop.PopupOK_Init();
               pop.IncludeTxt("Order Modified Successfully");
               pop.setSize(515,301);
               pop.setLocationRelativeTo(null);
               pop.setResizable(false);
               pop.setVisible(true);
               this.dispose();
                
            }
        }
    }//GEN-LAST:event_AddActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // TODO add your handling code here:
        Description_Input.setText("");
        Order_Date_Input.setDate(null);
        Order_Due_Date_Input.setDate(null);
        Customer_Name_Input.setSelectedIndex(0);
        jLabel5.setText("No Customer selected");
        Product_ID_Input.setSelectedIndex(0);
        Quantity_Input.setText("");
        Order_Status_Input.setSelectedIndex(0);
        Discount_Input.setText("");
        jLabel1.setText("0.0");
        jLabel9.setText("0.0");        
             
        
    }//GEN-LAST:event_ResetActionPerformed

    private void Add_CustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_CustomerActionPerformed
        // TODO add your handling code here:
        this.dispose();
         new main().setVisible(true);
    }//GEN-LAST:event_Add_CustomerActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
               OrderTable ordertable = new OrderTable();
               BackgroundPanel background = CallBackground.call();
               ordertable.setContentPane(background);
               ordertable.OrderTableInit();
               ordertable.setSize(1220, 1010);
               ordertable.setLocationRelativeTo(null);
               ordertable.setVisible(true);
               ordertable.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
               try {
                    ordertable.setIconImage(ImageIO.read(getResourceAsStream("Images/frameIcon.png")));
                } catch (IOException ex) {
                    Logger.getLogger(OrderTable.class.getName()).log(Level.SEVERE, null, ex);
                }
               this.dispose();
    }//GEN-LAST:event_BackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       try {
            // Set cross-platform Java L&F (also called "Metal")
        UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
    } 
    catch (UnsupportedLookAndFeelException e) {
       // handle exception
    }
    catch (ClassNotFoundException e) {
       // handle exception
    }
    catch (InstantiationException e) {
       // handle exception
    }
    catch (IllegalAccessException e) {
       // handle exception
    }
         //Create and show the GUI.
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               Order_Form orderform = new Order_Form();
               BackgroundPanel background = CallBackground.call();
               orderform.setContentPane(background);
               orderform.Order_Form_Init();
               orderform.setLocationRelativeTo(null);
               orderform.setVisible(true);
               orderform.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
               try {
                    orderform.setIconImage(ImageIO.read(getResourceAsStream("Images/frameIcon.png")));
                } catch (IOException ex) {
                    Logger.getLogger(OrderTable.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Add_Customer;
    private javax.swing.JButton Back;
    private javax.swing.JLabel Customer_ID;
    private javax.swing.JComboBox<String> Customer_Name_Input;
    private javax.swing.JLabel Description;
    private javax.swing.JTextArea Description_Input;
    private javax.swing.JLabel Discount;
    private javax.swing.JTextField Discount_Input;
    private org.jdesktop.swingx.JXDatePicker Order_Date_Input;
    private org.jdesktop.swingx.JXDatePicker Order_Due_Date_Input;
    private javax.swing.JLabel Order_ID;
    private javax.swing.JLabel Order_Status;
    private javax.swing.JComboBox<String> Order_Status_Input;
    private javax.swing.JLabel Product_ID;
    private javax.swing.JComboBox<String> Product_ID_Input;
    private javax.swing.JLabel Quantity;
    private javax.swing.JTextField Quantity_Input;
    private javax.swing.JButton Reset;
    private javax.swing.JLabel Total_Price;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
